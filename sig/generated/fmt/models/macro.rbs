# Generated from lib/fmt/models/macro.rb with RBS::Inline

module Fmt
  # Represents an uninvoked method call
  #
  # A Macro is comprised of:
  # 1. name: Symbol
  # 2. arguments: Arguments
  class Macro < Model
    attr_reader name: untyped

    attr_reader arguments: untyped

    # Constructor
    # @rbs ast: Node
    def initialize: (Node ast) -> untyped

    # Hash representation of the model (required for pattern matching)
    # @rbs return: Hash[Symbol, Object]
    def to_h: () -> Hash[Symbol, Object]

    # Processes a macro AST node
    # @rbs node: Node
    # @rbs return: void
    def on_macro: (Node node) -> void

    # Processes a procedure AST node
    # @rbs node: Node
    # @rbs return: void
    def on_name: (Node node) -> void

    # Processes an arguments AST node
    # @rbs node: Node
    # @rbs return: void
    def on_arguments: (Node node) -> void
  end
end
