# Generated from lib/fmt/models/model.rb with RBS::Inline

module Fmt
  class Model
    extend Forwardable

    # Constructor
    # @rbs tokens: Array[[[Integer, Integer], Symbol, String, Object]] -- Ripper tokens
    # @rbs return: Fmt::Model
    def initialize: (*untyped tokens) -> Fmt::Model

    attr_reader tokens: untyped

    attr_reader source: untyped

    # AST representation of the model
    # @rbs return: AST::Node
    def ast: () -> AST::Node

    # AST::Node built from the Ripper tokens
    # @rbs return: Array[AST::Node]
    def tokens_ast: () -> Array[AST::Node]

    attr_reader processor: untyped

    # Source string built from Ripper tokens
    # @example [[lineno, column], type, token, state]
    # @rbs return: String
    def tokens_source: () -> String

    # Builds an AST node
    # @rbs type: Symbol -- node type
    # @rbs children: Array[Object] -- node children
    # @rbs properties: Hash[Symbol, Object] -- node properties
    # @rbs return: AST::Node
    def ast_node: (Symbol type, *untyped children, **untyped properties) -> AST::Node

    private

    # Processes the model
    # @rbs return: void
    def process: () -> void
  end
end
