# Generated from lib/fmt/tokenizer.rb with RBS::Inline

module Fmt
  # Ruby source code token extractor
  #
  # Uses Ripper from Ruby's standard library
  # @see https://rubyapi.org/3.4/o/ripper
  # @see doc/RIPPER.md (cheetsheet)
  #
  # @example Ripper token
  #   [[lineno, column], type, token, state]
  #   [[Integer, Integer], Symbol, String, Object]
  class Tokenizer
    # Constructor
    # @rbs urtext: String -- original source code
    def initialize: (String urtext) -> untyped

    attr_reader urtext: untyped

    attr_reader tokens: untyped

    # Tokenizes the urtext (original source code)
    # @rbs return: Array[Token] -- wrapped ripper tokens
    def tokenize: () -> Array[Token]

    # Returns leading identifier tokens (before arguments or format specifiers)
    # @rbs return: Array[Token]
    def identifier_tokens: () -> Array[Token]

    # Returns the argument tokens
    # @rbs return: Array[Token]
    def argument_tokens: () -> Array[Token]
  end
end
