# Generated from lib/fmt/template.rb with RBS::Inline

module Fmt
  class Template
    HEAD: ::String

    TAIL: ::String

    # Initializes a Fmt::Template instance
    # @rbs key: Symbol -- unique key that identifies the template
    # @rbs filters: Array[Fmt::Filter] -- filters to apply
    # @rbs embeds: Array[Fmt::Embed] -- embeddings
    # @rbs string: String -- string that contains template
    # @rbs return: Fmt::Template
    def initialize: (Symbol key, *untyped filters, ?embeds: Array[Fmt::Embed], ?string: String) -> Fmt::Template

    attr_reader key: untyped

    attr_reader filters: untyped

    attr_reader embeds: untyped

    attr_reader string: untyped

    # The filter string (i.e. red|bold)
    # @rbs return: String
    def filter_string: () -> String

    # The filter regexp (i.e. /red\|bold/)
    # @rbs return: Regexp
    def filter_regexp: () -> Regexp

    # The placeholder string (i.e. %{name}red|bold)
    # @rbs return: String
    def placeholder_string: () -> String

    # The template/placeholder regexp (i.e. /%{name}red\|bold/)
    # @rbs return: Regexp
    def placeholder_regexp: () -> Regexp

    def format: (untyped string, ?locals: untyped) -> untyped

    def format_embeds: (untyped string, ?locals: untyped) -> untyped
  end
end
